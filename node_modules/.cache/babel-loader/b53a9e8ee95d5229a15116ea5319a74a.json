{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rench\\\\Desktop\\\\GITHUB projects\\\\todo-hooks\\\\src\\\\components\\\\TodoItem.jsx\";\nimport React from \"react\";\nimport s from '../styles/dist/TodoItem.module.css';\n\nconst TodoItem = props => {\n  let isCompleted = () => {\n    if (props.completed === true) return s.completed;\n  };\n\n  let toggleCompleting = id => {\n    props.toggleCompleting(id);\n  };\n\n  let removeTodo = () => {\n    props.removeTodo(props.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    onClick: () => toggleCompleting(props.id),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: isCompleted() + ' ' + s.name,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.right,\n      children: [props.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.lightgreen + ' ' + s.status,\n        children: \"\\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.lightred + ' ' + s.status,\n        children: \"\\u043D\\u0435 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 108\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.deleteButton,\n        onClick: removeTodo,\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/rench/Desktop/GITHUB projects/todo-hooks/src/components/TodoItem.jsx"],"names":["React","s","TodoItem","props","isCompleted","completed","toggleCompleting","id","removeTodo","wrapper","name","text","right","lightgreen","status","lightred","deleteButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oCAAd;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,MAAIC,WAAW,GAAG,MAAM;AACpB,QAAID,KAAK,CAACE,SAAN,KAAoB,IAAxB,EAA8B,OAAOJ,CAAC,CAACI,SAAT;AACjC,GAFD;;AAIA,MAAIC,gBAAgB,GAAIC,EAAD,IAAQ;AAC3BJ,IAAAA,KAAK,CAACG,gBAAN,CAAuBC,EAAvB;AACH,GAFD;;AAIA,MAAIC,UAAU,GAAG,MAAM;AACnBL,IAAAA,KAAK,CAACK,UAAN,CAAiBL,KAAK,CAACI,EAAvB;AAEH,GAHD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEN,CAAC,CAACQ,OAAlB;AAA2B,IAAA,OAAO,EAAE,MAAOH,gBAAgB,CAACH,KAAK,CAACI,EAAP,CAA3D;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEH,WAAW,KAAK,GAAhB,GAAsBH,CAAC,CAACS,IAAxC;AAAA,gBAA+CP,KAAK,CAACQ;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAEV,CAAC,CAACW,KAAlB;AAAA,iBACKT,KAAK,CAACE,SAAN,gBAAkB;AAAQ,QAAA,SAAS,EAAEJ,CAAC,CAACY,UAAF,GAAe,GAAf,GAAqBZ,CAAC,CAACa,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB,gBAA0F;AAAQ,QAAA,SAAS,EAAEb,CAAC,CAACc,QAAF,GAAa,GAAb,GAAmBd,CAAC,CAACa,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD/F,eAEI;AAAK,QAAA,SAAS,EAAEb,CAAC,CAACe,YAAlB;AAAgC,QAAA,OAAO,EAAER,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxBD;;KAAMN,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport s from '../styles/dist/TodoItem.module.css'\r\n\r\n\r\nconst TodoItem = props => {\r\n    let isCompleted = () => {\r\n        if (props.completed === true) return s.completed;\r\n    }\r\n\r\n    let toggleCompleting = (id) => {\r\n        props.toggleCompleting(id)\r\n    }\r\n\r\n    let removeTodo = () => {\r\n        props.removeTodo(props.id)\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper} onClick={() => (toggleCompleting(props.id))}>\r\n            <div className={isCompleted() + ' ' + s.name}>{props.text}</div>\r\n            <div className={s.right}>\r\n                {props.completed ? <button className={s.lightgreen + ' ' + s.status} >выполнено</button> : <button className={s.lightred + ' ' + s.status} >не выполнено</button>}\r\n                <div className={s.deleteButton} onClick={removeTodo}>&#10006;</div>\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}