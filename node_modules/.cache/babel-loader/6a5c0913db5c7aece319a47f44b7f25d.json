{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rench\\\\Desktop\\\\GITHUB projects\\\\todo-hooks\\\\src\\\\components\\\\TodoItem.jsx\";\nimport React from \"react\";\nimport s from '../styles/dist/TodoItem.module.css';\n\nconst TodoItem = props => {\n  let isCompleted = () => {\n    if (props.completed === true) return s.completed;\n  };\n\n  let toggleCompleting = () => {\n    props.toggleCompleting(props.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: isCompleted(),\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), props.completed ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.lightgreen,\n        children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: s.lightred,\n        children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 95\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/rench/Desktop/GITHUB projects/todo-hooks/src/components/TodoItem.jsx"],"names":["React","s","TodoItem","props","isCompleted","completed","toggleCompleting","id","wrapper","text","lightgreen","lightred"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,oCAAd;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,MAAIC,WAAW,GAAG,MAAM;AACpB,QAAID,KAAK,CAACE,SAAN,KAAoB,IAAxB,EAA8B,OAAOJ,CAAC,CAACI,SAAT;AACjC,GAFD;;AAIA,MAAIC,gBAAgB,GAAG,MAAM;AACzBH,IAAAA,KAAK,CAACG,gBAAN,CAAuBH,KAAK,CAACI,EAA7B;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEN,CAAC,CAACO,OAAlB;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEJ,WAAW,EAA3B;AAAA,kBAAgCD,KAAK,CAACM;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQN,KAAK,CAACE,SAAN,gBAAkB;AAAQ,QAAA,SAAS,EAAEJ,CAAC,CAACS,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB,gBAA0E;AAAQ,QAAA,SAAS,EAAET,CAAC,CAACU,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHlF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApBD;;KAAMT,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport s from '../styles/dist/TodoItem.module.css'\r\n\r\n\r\nconst TodoItem = props => {\r\n    let isCompleted = () => {\r\n        if (props.completed === true) return s.completed;\r\n    }\r\n\r\n    let toggleCompleting = () => {\r\n        props.toggleCompleting(props.id)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div>\r\n                <div className={isCompleted()}>{props.text}</div>\r\n                {\r\n                    props.completed ? <button className={s.lightgreen} >Выполнено!</button> : <button className={s.lightred} >Выполнить</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}