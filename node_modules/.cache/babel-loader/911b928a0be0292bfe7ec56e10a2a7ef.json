{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rench\\\\Desktop\\\\GITHUB projects\\\\todo-hooks\\\\src\\\\components\\\\TodoItemList.jsx\";\nimport React from \"react\";\nimport s from '../styles/dist/TodoItemList.module.css';\nimport TodoItem from \"./TodoItem\";\n\nconst TodoItemList = props => {\n  let itemArray = [];\n  props.todos.forEach(todo => {\n    if (props.filter === 'all') {\n      itemArray.push( /*#__PURE__*/_jsxDEV(TodoItem, {\n        id: todo.id,\n        text: todo.text,\n        completed: todo.completed,\n        toggleCompleting: props.toggleCompleting\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this));\n    } else if (props.filter === 'completed' && todo.completed) {\n      itemArray.push( /*#__PURE__*/_jsxDEV(TodoItem, {\n        id: todo.id,\n        text: todo.text,\n        completed: todo.completed,\n        toggleCompleting: props.toggleCompleting\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this));\n    } else if (props.filter === 'uncompleted' && !todo.completed) {\n      itemArray.push( /*#__PURE__*/_jsxDEV(TodoItem, {\n        id: todo.id,\n        text: todo.text,\n        completed: todo.completed,\n        toggleCompleting: props.toggleCompleting\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.wrapper,\n    children: itemArray\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TodoItemList;\nexport default TodoItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItemList\");","map":{"version":3,"sources":["C:/Users/rench/Desktop/GITHUB projects/todo-hooks/src/components/TodoItemList.jsx"],"names":["React","s","TodoItem","TodoItemList","props","itemArray","todos","forEach","todo","filter","push","id","text","completed","toggleCompleting","wrapper"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,wCAAd;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE1B,MAAIC,SAAS,GAAG,EAAhB;AAEAD,EAAAA,KAAK,CAACE,KAAN,CAAYC,OAAZ,CAAoBC,IAAI,IAAI;AACxB,QAAIJ,KAAK,CAACK,MAAN,KAAiB,KAArB,EAA4B;AACxBJ,MAAAA,SAAS,CAACK,IAAV,eACI,QAAC,QAAD;AAAwB,QAAA,EAAE,EAAEF,IAAI,CAACG,EAAjC;AAAqC,QAAA,IAAI,EAAEH,IAAI,CAACI,IAAhD;AAAsD,QAAA,SAAS,EAAEJ,IAAI,CAACK,SAAtE;AAAiF,QAAA,gBAAgB,EAAET,KAAK,CAACU;AAAzG,SAAeN,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIO,IAAIP,KAAK,CAACK,MAAN,KAAiB,WAAjB,IAAgCD,IAAI,CAACK,SAAzC,EAAoD;AACvDR,MAAAA,SAAS,CAACK,IAAV,eACI,QAAC,QAAD;AAAwB,QAAA,EAAE,EAAEF,IAAI,CAACG,EAAjC;AAAqC,QAAA,IAAI,EAAEH,IAAI,CAACI,IAAhD;AAAsD,QAAA,SAAS,EAAEJ,IAAI,CAACK,SAAtE;AAAiF,QAAA,gBAAgB,EAAET,KAAK,CAACU;AAAzG,SAAeN,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJM,MAIA,IAAIP,KAAK,CAACK,MAAN,KAAiB,aAAjB,IAAkC,CAACD,IAAI,CAACK,SAA5C,EAAuD;AAC1DR,MAAAA,SAAS,CAACK,IAAV,eACI,QAAC,QAAD;AAAwB,QAAA,EAAE,EAAEF,IAAI,CAACG,EAAjC;AAAqC,QAAA,IAAI,EAAEH,IAAI,CAACI,IAAhD;AAAsD,QAAA,SAAS,EAAEJ,IAAI,CAACK,SAAtE;AAAiF,QAAA,gBAAgB,EAAET,KAAK,CAACU;AAAzG,SAAeN,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ,GAdD;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAEV,CAAC,CAACc,OAAlB;AAAA,cACKV;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzBD;;KAAMF,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport s from '../styles/dist/TodoItemList.module.css'\r\nimport TodoItem from \"./TodoItem\";\r\n\r\n\r\nconst TodoItemList = props => {\r\n\r\n    let itemArray = [];\r\n\r\n    props.todos.forEach(todo => {\r\n        if (props.filter === 'all') {\r\n            itemArray.push(\r\n                <TodoItem key={todo.id} id={todo.id} text={todo.text} completed={todo.completed} toggleCompleting={props.toggleCompleting} />\r\n            )\r\n        } else if (props.filter === 'completed' && todo.completed) {\r\n            itemArray.push(\r\n                <TodoItem key={todo.id} id={todo.id} text={todo.text} completed={todo.completed} toggleCompleting={props.toggleCompleting} />\r\n            )\r\n        } else if (props.filter === 'uncompleted' && !todo.completed) {\r\n            itemArray.push(\r\n                <TodoItem key={todo.id} id={todo.id} text={todo.text} completed={todo.completed} toggleCompleting={props.toggleCompleting} />\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            {itemArray}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TodoItemList;"]},"metadata":{},"sourceType":"module"}